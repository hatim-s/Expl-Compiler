type
  List
  {
    int data;
    List next;
  }
  List2 {
    int name;
  }
endtype

decl
    List head;
    List reverse (List node);
enddecl

List reverse (List node) {
  decl 
    List temp;
  enddecl

  begin
    if (node.next == null) then
      head = node;
    else
      temp = reverse (node.next);
      temp.next = node;
      node.next = null;
    endif;

    return node;
  end
}

int main()
{
  decl
    int length, x;
    List p, q;
  enddecl

  begin
    initialize();

    head=null;
    read(length);

    q=head;
    while (length!=0)  do
      read(x);
      p=alloc();
      p.data=x;
      p.next=null;

      if (head==null) then
      head=p;
      q=p;
      else
      q.next=p;
      q=q.next;
      endif;

      length=length-1;
    endwhile;

    p=head;
    while(p!=null)  do
      write(p.data);
      p=p.next;
    endwhile;

    q = reverse (head);

    p=head;
    while(p!=null)  do
      write(p.data);
      p=p.next;
    endwhile;

    return 1;
  end
}